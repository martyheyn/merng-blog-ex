{"version":3,"sources":["context/reducer.js","context/auth.js","util/AuthRoute.js","components/Button.js","components/Navbar.js","components/HomePage/LandingPage.js","components/HomePage/Footer.js","pages/Home.js","components/Posts/Post.js","util/graphql.js","components/Posts/Posts.js","util/groupList.js","util/tagList.js","components/SideBar/Group.js","components/SideBar/SideBar.js","components/SearchBar.js","pages/Board.js","components/SinglePage/CommentBox.js","components/Delete.js","components/SinglePage/Reply.js","components/SinglePage/Comment.js","components/SinglePage/Comments.js","util/hooks.js","components/EditUser/EditPost.js","pages/SinglePost.js","components/Posts/PostInput.js","components/Select.js","pages/CreatePost.js","components/Input.js","util/GoogleLogin.js","pages/Login.js","components/EditUser/UserInfo.js","images/blank-avatar.jpg","pages/UserProfile.js","pages/Register.js","App.js","index.js"],"names":["authReducer","state","action","type","user","payload","initialState","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","createContext","login","userData","logout","AuthProvider","props","useReducer","dispatch","Provider","value","setItem","token","AuthRoute","Component","component","rest","useContext","render","to","STYLES","SIZES","Button","children","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","Navbar","useState","click","setClick","button","setButton","closeMobileMenu","showButton","window","innerWidth","useEffect","addEventListener","LandingPage","Footer","name","placeholder","target","aria-label","Home","Post","post","id","username","title","body","createdAt","commentCount","likeCount","style","color","textDecoration","moment","fromNow","LOGIN_USER","gql","REGISTER_USER","FETCH_PROFILE_QUERY","EDIT_PROFILE_MUTATION","DELETE_USER_MUTATION","FETCH_POSTS_QUERY","FETCH_POST_QUERY","CREATE_POST_MUTATION","DELETE_POST_MUTATION","CREATE_COMMENT_MUTATION","DELETE_COMMENT_MUTATION","CREATE_REPLY_MUTATION","DELETE_REPLPY_MUTATION","EDIT_POST_MUTATION","Posts","searchWord","useQuery","loading","data","posts","getPosts","filter","toLowerCase","map","groups","tags","Group","groupsOrTag","setGroupOrTag","groupStyle","display","justifyContent","padding","backgroundColor","opacity","border","cursor","groupPageStyle","SideBar","groupTags","groupOrTag","gt","SearchBar","setSearchWord","onChange","e","preventDefault","Board","width","setWidth","handleResize","removeEventListener","aria-hidden","CommentBox","reply","commentId","postId","setCom","comment","setComment","commentInputRef","useRef","mutation","useMutation","update","onError","err","console","log","JSON","stringify","variables","createComment","ref","disabled","trim","Delete","replyId","userId","history","useHistory","mutationPost","cache","newData","readQuery","query","writeQuery","push","deletePostMutation","deleteUserMutation","Reply","Comment","com","replys","Comments","comments","useForm","callback","initailState","values","setValues","onSubmit","stripes","AuthHeading","question","link","account","EditPost","setEdit","getPost","editPost","SinglePost","edit","match","params","goBack","length","PostInput","Select","htmlFor","group","CreatePost","activeTab","setActiveTab","createPost","newPost","newPostData","tabClick","getAttribute","flexWrap","Input","GoogleLoginHook","context","googleSuccess","res","a","googleUser","googleId","email","profileObj","toISOString","tokenId","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Login","errors","setErrors","loginUser","password","_","graphQLErrors","extensions","exception","Object","keys","GoogleLogin","UserInfo","inputValue","getUser","label","inputName","editUser","bio","UserProfile","src","stockAvatar","alt","Register","addUser","confirmPassword","result","register","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","InMemoryCache","connectToDevTools","App","exact","path","Route","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.705b9611.chunk.js","sourcesContent":["// Create reducer\nexport default function authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport authReducer from './reducer';\n\nconst initialState = {\n  user: null,\n};\n\n// Check if there is already a user there\nif (localStorage.getItem('jwtToken')) {\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\n\n  // If expiration time is less than now (it is expired)\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('jwtToken');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\n// Create context\nconst AuthContext = createContext({\n  user: null,\n  login: (userData) => {},\n  logout: () => {},\n});\n\n// userReducer takes a reducer and returns a state and a dispatch\n// { user: null } is the initalState\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    // To keep user logged in even with refresh, store user locally\n    localStorage.setItem('jwtToken', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData,\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('jwtToken');\n    dispatch({ type: 'LOGOUT' });\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ user: state.user, login, logout }}\n      {...props}\n    />\n  );\n}\n\nexport { AuthContext, AuthProvider };\n","// Checks if we are logged in\n// redirects us to homepage if we try to access the login or register pages\nimport { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nexport const AuthRoute = ({ component: Component, ...rest }) => {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Redirect to='/' /> : <Component {...props} />\n      }\n    />\n  );\n};\n\nexport const AuthRouteProfile = ({ component: Component, ...rest }) => {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? <Component {...props} /> : <Redirect to='/' />\n      }\n    />\n  );\n};\n","import '../styles/Button.css';\n\n// Default styles\nconst STYLES = ['btn--primary', 'btn--outline'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nfunction Button({ children, type, onClick, buttonStyle, buttonSize }) {\n  // Buttin size and style\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return (\n    <button\n      className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n      onClick={onClick}\n      type={type}\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Navbar.css';\n\nimport { AuthContext } from '../context/auth';\nimport Button from './Button';\n\nfunction Navbar() {\n  const { user, logout } = useContext(AuthContext);\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    // display button depending on screensize\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  function logoutMobile() {\n    logout();\n    closeMobileMenu();\n  }\n\n  window.addEventListener('resize', showButton);\n\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            <i className='fab fa-typo3' />\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            {/* <li className='nav-item'>\n              <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                About\n              </Link>\n            </li> */}\n            <li className='nav-item'>\n              <Link to='/board' className='nav-links' onClick={closeMobileMenu}>\n                Message Board\n              </Link>\n            </li>\n            {!user ? (\n              <>\n                <li className='nav-item'>\n                  <Link\n                    to='/login'\n                    className='nav-links-mobile'\n                    onClick={closeMobileMenu}\n                  >\n                    Login\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link\n                    to='/register'\n                    className='nav-links-mobile'\n                    onClick={closeMobileMenu}\n                  >\n                    Sign Up\n                  </Link>\n                </li>\n              </>\n            ) : (\n              <li className='nav-item'>\n                <Link\n                  to='/'\n                  className='nav-links-mobile'\n                  onClick={logoutMobile}\n                >\n                  Logout\n                </Link>\n              </li>\n            )}\n          </ul>\n          {button && !user && (\n            <>\n              <Button buttonStyle='btn--outline' buttonSize=''>\n                <Link to='/login' className='btn--link'>\n                  Login\n                </Link>\n              </Button>\n              <Button buttonStyle='btn--outline' buttonSize=''>\n                <Link to='/register' className='btn--link'>\n                  Sign Up\n                </Link>\n              </Button>\n            </>\n          )}\n          {button && user && (\n            <Button buttonStyle='btn--outline' buttonSize=''>\n              <Link to='/' className='btn--link' onClick={logout}>\n                Logout\n              </Link>\n            </Button>\n          )}\n        </div>\n      </nav>\n    </>\n  );\n}\n\nexport default Navbar;\n","// import Button from '../Button';\n// import boxing from '../videos/boxing.mp4';\nimport '../../styles/LandingPage.css';\n\nfunction LandingPage() {\n  return (\n    <div className='landing-container'>\n      {/* <video src={boxing} autoPlay loop muted /> */}\n      <h1>Example Blog</h1>\n      <p>Created with React and Graphql</p>\n      {/* <div className='landing-btns'>\n        <Button\n          className='btns'\n          buttonStyle='btn--outline'\n          buttonSize='btn--large'\n        >\n          GET STARTED\n        </Button>\n        <Button\n          className='btns'\n          buttonStyle='btn--primary'\n          buttonSize='btn--large'\n        >\n          WATCH TRAILER <i className='far fa-play-circle' />\n        </Button>\n      </div> */}\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import Button from '../Button';\nimport { Link } from 'react-router-dom';\nimport '../../styles/Footer.css';\n\nfunction Footer() {\n  return (\n    <div className='footer-container'>\n      <section className='footer-subscription'>\n        <p className='footer-subscription-heading'>Subcribe to this example blog</p>\n        <p className='footer-subscription-text'>\n          You can unsubscribe at any time.\n        </p>\n        <div className='input-areas'>\n          <form>\n            <input\n              className='footer-input'\n              name='email'\n              type='email'\n              placeholder='Your Email'\n            />\n            <Button buttonStyle='btn--outline'>Subscribe</Button>\n          </form>\n        </div>\n      </section>\n      <section className='social-media'>\n        <div className='social-media-wrap'>\n          <div className='footer-logo'>\n            <Link to='/' className='social-logo'>\n              BLOG\n              <i className='fab fa-typo3' />\n            </Link>\n          </div>\n          <small className='website-rights'>Blog © 2021</small>\n          <div className='social-icons'>\n            <Link\n              className='social-icon-link facebook'\n              to='/'\n              target='_blank'\n              aria-label='Facebook'\n            >\n              <i className='fab fa-facebook-f' />\n            </Link>\n            <Link\n              className='social-icon-link instagram'\n              to='/'\n              target='_blank'\n              aria-label='Instagram'\n            >\n              <i className='fab fa-instagram' />\n            </Link>\n            <Link\n              className='social-icon-link youtube'\n              to='/'\n              target='_blank'\n              aria-label='Youtube'\n            >\n              <i className='fab fa-youtube' />\n            </Link>\n            <Link\n              className='social-icon-link twitter'\n              to='/'\n              target='_blank'\n              aria-label='Twitter'\n            >\n              <i className='fab fa-twitter' />\n            </Link>\n            <Link\n              className='social-icon-link twitter'\n              to='/'\n              target='_blank'\n              aria-label='LinkedIn'\n            >\n              <i className='fab fa-linkedin' />\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Footer;\n","import LandingPage from '../components/HomePage/LandingPage';\nimport Footer from '../components/HomePage/Footer';\n\nfunction Home() {\n  return (\n    <div className='home'>\n      <LandingPage />\n      <Footer />\n    </div>\n  );\n}\n\nexport default Home;\n","import { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport '../../styles/Post.css';\n\nfunction Post({ post }) {\n  const {\n    id,\n    username,\n    title,\n    body,\n    createdAt,\n    commentCount,\n    likeCount,\n  } = post;\n\n  return (\n    <>\n      <div className='post-card' style={{}}>\n        <div className='post-votes'></div>\n        <div className='post-section'>\n          <div className='post-inline'>\n            <Link\n              to={`/${username}`}\n              style={{ color: 'inherit', textDecoration: 'inherit' }}>\n              {username} <span>|</span>\n            </Link>\n            <p className='post-date'>{moment(createdAt).fromNow()}</p>\n          </div>\n          <Link to={`/board/${id}`}>\n            <h1 className='post-title'>{title}</h1>\n          </Link>\n          <p className='post-body'>{body}</p>\n          <div className='post-inline post-icons'>\n            <i className='fas fa-comment-alt' />\n            <p>\n              {commentCount}\n              {commentCount === 1 ? '  Comment' : '  Comments'}\n            </p>\n            <p className='post-likes'>{likeCount} Likes</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Post;\n","import { gql } from '@apollo/client';\n\n//  User Mutations and Query\nexport const LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      id\n      email\n      username\n      bio\n      createdAt\n      token\n    }\n  }\n`;\n\nexport const REGISTER_USER = gql`\n  mutation register(\n    $username: String!\n    $email: String!\n    $password: String!\n    $confirmPassword: String!\n  ) {\n    register(\n      registerInput: {\n        username: $username\n        email: $email\n        password: $password\n        confirmPassword: $confirmPassword\n      }\n    ) {\n      id\n      email\n      username\n      bio\n      createdAt\n      token\n    }\n  }\n`;\n\n// Get user\nexport const FETCH_PROFILE_QUERY = gql`\n  query getUser($username: String!) {\n    getUser(username: $username) {\n      id\n      email\n      username\n      bio\n      createdAt\n    }\n  }\n`;\n\n// Edit the users profile\nexport const EDIT_PROFILE_MUTATION = gql`\n  mutation editUser($userId: ID!, $email: String!, $bio: String!) {\n    editUser(userId: $userId, email: $email, bio: $bio) {\n      id\n      email\n      username\n      bio\n      createdAt\n    }\n  }\n`;\n\n// Delete User\nexport const DELETE_USER_MUTATION = gql`\n  mutation deleteUser($userId: ID!) {\n    deleteUser(userId: $userId)\n    # No return needed\n  }\n`;\n\n// Post Graphql:\n// Post Mutations and Query\nexport const FETCH_POSTS_QUERY = gql`\n  query getPosts {\n    getPosts {\n      id\n      title\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n        replys {\n          id\n          username\n          createdAt\n          body\n        }\n      }\n      # group\n      tags\n    }\n  }\n`;\n\nexport const FETCH_POST_QUERY = gql`\n  query getPost($postId: ID!) {\n    getPost(postId: $postId) {\n      id\n      title\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n        replys {\n          id\n          username\n          createdAt\n          body\n        }\n      }\n      tags\n    }\n  }\n`;\n\n// Get by Group/ took group out for testing\nexport const FETCH_GROUP_POST_QUERY = gql`\n  query getGroupPosts($groupName: String!) {\n    getGroupPosts(groupName: $groupName) {\n      id\n      title\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n        replys {\n          id\n          username\n          createdAt\n          body\n        }\n      }\n      tags\n    }\n  }\n`;\n\n// Get by Group\nexport const FETCH_TAG_POST_QUERY = gql`\n  query getTagPosts($tagName: String!) {\n    getTagPosts(tagName: $tagName) {\n      id\n      title\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n        replys {\n          id\n          username\n          createdAt\n          body\n        }\n      }\n      tags\n    }\n  }\n`;\n\nexport const CREATE_POST_MUTATION = gql`\n  mutation createPost($title: String!, $body: String!) {\n    createPost(title: $title, body: $body) {\n      id\n      title\n      body\n      createdAt\n      likes {\n        id\n        username\n        createdAt\n      }\n      likeCount\n      comments {\n        id\n        body\n        username\n        createdAt\n        replys {\n          id\n          body\n          username\n          createdAt\n        }\n      }\n      commentCount\n    }\n  }\n`;\n\n// Delete stuff\n// Delete post graphql mutation\nexport const DELETE_POST_MUTATION = gql`\n  mutation deletePost($postId: ID!) {\n    deletePost(postId: $postId)\n    # No return needed\n  }\n`;\n\nexport const CREATE_COMMENT_MUTATION = gql`\n  mutation createComment($postId: ID!, $body: String!) {\n    createComment(postId: $postId, body: $body) {\n      id\n      comments {\n        id\n        body\n        username\n        createdAt\n      }\n      commentCount\n    }\n  }\n`;\n\n// Delete comment mutation\nexport const DELETE_COMMENT_MUTATION = gql`\n  mutation deleteComment($postId: ID!, $commentId: ID!) {\n    deleteComment(postId: $postId, commentId: $commentId) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n        replys {\n          id\n          username\n          createdAt\n          body\n        }\n      }\n      commentCount\n    }\n  }\n`;\n\nexport const CREATE_REPLY_MUTATION = gql`\n  mutation createReply($postId: ID!, $commentId: ID!, $body: String!) {\n    createReply(postId: $postId, commentId: $commentId, body: $body) {\n      id\n      comments {\n        id\n        body\n        username\n        createdAt\n        replys {\n          id\n          body\n          username\n          createdAt\n        }\n      }\n    }\n  }\n`;\n\n// Delete comment mutation\nexport const DELETE_REPLPY_MUTATION = gql`\n  mutation deleteReply($postId: ID!, $commentId: ID!, $replyId: ID!) {\n    deleteReply(postId: $postId, commentId: $commentId, replyId: $replyId) {\n      id\n      comments {\n        id\n        username\n        createdAt\n        body\n        replys {\n          id\n          username\n          createdAt\n          body\n        }\n      }\n      commentCount\n    }\n  }\n`;\n\n// Edit the users post on the single page\nexport const EDIT_POST_MUTATION = gql`\n  mutation editPost($postId: ID!, $body: String!) {\n    editPost(postId: $postId, body: $body) {\n      id\n      body\n      createdAt\n      username\n      likeCount\n      likes {\n        username\n      }\n      commentCount\n      comments {\n        id\n        username\n        createdAt\n        body\n      }\n    }\n  }\n`;\n","import { useQuery } from '@apollo/client';\n\nimport Post from './Post';\nimport { FETCH_POSTS_QUERY } from '../../util/graphql';\n\nfunction Posts({ searchWord }) {\n  const { loading, data: { getPosts: posts } = {} } = useQuery(\n    FETCH_POSTS_QUERY\n  );\n\n  return (\n    <>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {posts &&\n            posts\n              .filter((post) =>\n                post.title.toLowerCase().includes(searchWord.toLowerCase())\n              )\n              .map((post) => (\n                <div key={post.id}>\n                  <Post post={post} />\n                </div>\n              ))}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Posts;\n","export const groups = [\n  {\n    name: 'ACL',\n    color: 'green',\n  },\n  {\n    name: 'Menicus',\n    color: 'red',\n  },\n  {\n    name: 'Arthitis',\n    color: 'teal',\n  },\n  {\n    name: 'Research Papers',\n    color: 'grey',\n  },\n  {\n    name: 'PCL',\n    color: 'orange',\n  },\n];\n","export const tags = [\n  {\n    name: 'Exercises',\n    color: 'green',\n  },\n  {\n    name: 'Post Surgery',\n    color: 'red',\n  },\n  {\n    name: 'New Wave Shit',\n    color: 'teal',\n  },\n  {\n    name: '\"Miracles\"',\n    color: 'grey',\n  },\n];\n","import '../../styles/Group.css';\n\nfunction Group({ groupsOrTag, setGroupOrTag, tags }) {\n  const { name, color } = groupsOrTag;\n\n  const groupPageStyle = (color) => ({\n    groupStyle: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      padding: '18px 10px',\n      backgroundColor: color,\n      opacity: '0.8',\n      border: '1px solid black',\n      cursor: 'pointer',\n      '&:hover': {\n        backgroundColor: 'red',\n      },\n    },\n  });\n\n  return (\n    <div style={groupPageStyle(color).groupStyle}>\n      <p className='group-name' onClick={() => setGroupOrTag(false)}>\n        {name}\n      </p>\n    </div>\n  );\n}\n\nexport default Group;\n","import { useState } from 'react';\nimport '../../styles/SideBar.css';\n\nimport { groups } from '../../util/groupList';\nimport { tags } from '../../util/tagList';\nimport Group from './Group';\n\nfunction SideBar() {\n  const [groupOrTag, setGroupOrTag] = useState(true);\n  let groupTags;\n\n  if (groupOrTag) {\n    groupTags = groups;\n  } else {\n    groupTags = tags;\n  }\n\n  return (\n    <>\n      <div className='sidebar'>\n        <h1>{groupOrTag ? 'Group' : 'Tags'}</h1>\n        {groupTags.map((gt) => (\n          <div key={gt.name}>\n            <Group groupsOrTag={gt} setGroupOrTag={setGroupOrTag} tags={tags} />\n          </div>\n        ))}\n      </div>\n      <div className='sidebar'>Resources Here</div>\n    </>\n  );\n}\n\nexport default SideBar;\n","import '../styles/SearchBar.css';\n\nfunction SearchBar({ searchWord, setSearchWord }) {\n  const onChange = (e) => {\n    e.preventDefault();\n    setSearchWord(e.target.value);\n  };\n\n  return (\n    <>\n      <input\n        className='searchbar'\n        type='text'\n        value={searchWord}\n        placeholder='Search'\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport default SearchBar;\n","import { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Board.css';\n\nimport Posts from '../components/Posts/Posts';\nimport SideBar from '../components/SideBar/SideBar';\nimport SearchBar from '../components/SearchBar';\nimport { AuthContext } from '../context/auth';\n\nfunction Board() {\n  const { user } = useContext(AuthContext);\n  const [searchWord, setSearchWord] = useState('');\n  const [width, setWidth] = useState(window.innerWidth);\n\n  // Width for browser\n  function useWindowSize() {\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWidth(window.innerWidth);\n      }\n      // Add event listener\n      window.addEventListener('resize', handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener('resize', handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return width;\n  }\n\n  useWindowSize();\n\n  return (\n    <div className='fullboard container'>\n      {user && (\n        <div className='board create-post'>\n          <h1>Create a Post</h1>\n          <Link to='whatsup' className='create-post-icon'>\n            <i className='fa fa-plus' />\n          </Link>\n        </div>\n      )}\n      <div className={user ? 'board board-filter-user' : 'board board-filter'}>\n        <span className='filter-item'>\n          <span className='filter-name'>Popular</span>\n          <i className='fa fa-fire filter-popular' aria-hidden='true' />\n        </span>\n        <div className='filter-item'>\n          <span className='filter-name filter-new'>New</span>\n          <i className='fa fa-life-ring' aria-hidden='true' />\n        </div>\n        <div className='filter-item-search'>\n          <i className='fa fa-search filter-name' aria-hidden='true' />\n          <SearchBar searchWord={searchWord} setSearchWord={setSearchWord} />\n        </div>\n      </div>\n      <div className='board container'>\n        <div className='board-masonry-post'>\n          <Posts searchWord={searchWord} />\n        </div>\n        {width > 960 && (\n          <div className='board-masonry-sidebar'>\n            <SideBar />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import { useState, useContext, useRef } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport '../../styles/CommentBox.css';\nimport { AuthContext } from '../../context/auth';\nimport {\n  CREATE_COMMENT_MUTATION,\n  CREATE_REPLY_MUTATION,\n} from '../../util/graphql';\n\nfunction CommentBox({ reply, commentId, postId, setCom }) {\n  const { user } = useContext(AuthContext);\n  const [comment, setComment] = useState('');\n  const commentInputRef = useRef(null);\n\n  const mutation = commentId ? CREATE_REPLY_MUTATION : CREATE_COMMENT_MUTATION;\n\n  const [createComment] = useMutation(mutation, {\n    update() {\n      setComment('');\n      if (commentId) {\n        setCom(false);\n      }\n      // commentInputRef.current.blur();\n    },\n    onError(err) {\n      console.log(JSON.stringify(err, null, 2));\n    },\n    variables: {\n      postId,\n      commentId,\n      body: comment,\n    },\n  });\n\n  return (\n    <div className='comment-box'>\n      {!reply && <p className='comment-box-title'>Comment Below</p>}\n      <textarea\n        placeholder='  Comments here'\n        onChange={(e) => setComment(e.target.value)}\n        ref={commentInputRef}\n      />\n      <div className=\"comment-box-footer\">\n      {/* <p>Footer with emojis and such</p> */}\n            {user && (\n        <button\n          type='submit'\n          disabled={comment.trim() === ''}\n          onClick={createComment}\n        >\n          {!reply ? 'Comment' : 'Reply'}\n        </button>\n      )}\n      </div>\n    </div>\n  );\n}\n\nexport default CommentBox;\n","import { useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Delete.css'\n\nimport { AuthContext } from '../context/auth';\nimport {\n  DELETE_POST_MUTATION,\n  DELETE_COMMENT_MUTATION,\n  DELETE_REPLPY_MUTATION,\n  DELETE_USER_MUTATION,\n  FETCH_POSTS_QUERY,\n} from '../util/graphql';\n\nfunction Delete({ postId, commentId, replyId, userId, username }) {\n  const { logout } = useContext(AuthContext);\n  const history = useHistory();\n\n  const mutationPost = replyId\n    ? DELETE_REPLPY_MUTATION\n    : commentId\n    ? DELETE_COMMENT_MUTATION\n    : DELETE_POST_MUTATION;\n\n  const [deletePostMutation] = useMutation(mutationPost, {\n    update(cache) {\n      if (!replyId || !commentId) {\n        const { getPosts } = cache.readQuery({ query: FETCH_POSTS_QUERY });\n        const newData = getPosts.filter((post) => post.id !== postId);\n        cache.writeQuery({\n          query: FETCH_POSTS_QUERY,\n          data: { getPosts: newData },\n        });\n        history.push('/board');\n      }\n    },\n    onError(err) {\n      console.log(JSON.stringify(err, null, 2));\n    },\n    variables: {\n      postId,\n      commentId,\n      replyId,\n    },\n  });\n\n  const [deleteUserMutation] = useMutation(DELETE_USER_MUTATION, {\n    update(cache) {\n      const { getPosts } = cache.readQuery({ query: FETCH_POSTS_QUERY });\n      const newData = getPosts.filter((post) => post.username !== username);\n      console.log(newData);\n      cache.writeQuery({\n        query: FETCH_POSTS_QUERY,\n        data: { getPosts: newData },\n      });\n      history.push('/');\n      logout();\n    },\n    onError(err) {\n      console.log(JSON.stringify(err, null, 2));\n    },\n    variables: {\n      userId,\n    },\n  });\n\n  return (\n    <>\n      {userId ? (\n        <button onClick={deleteUserMutation}>Delete User</button>\n      ) : (\n        <button className=\"delete-button\" onClick={deletePostMutation}>Delete</button>\n      )}\n    </>\n  );\n}\n\nexport default Delete;\n","import { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport '../../styles/Reply.css';\n\nimport Delete from '../Delete';\nimport { AuthContext } from '../../context/auth';\n\nfunction Reply({ reply, postId, commentId }) {\n  const { user } = useContext(AuthContext);\n\n  return (\n    <div className='reply'>\n      <div className='reply-head'>\n        <Link to={`/${reply.username}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\n          {reply.username} <span>|</span>\n        </Link>\n        <span className='reply-createdAt'>{moment(reply.createdAt).fromNow()}</span>\n      </div>\n      <div className='reply-content'>{reply.body}</div>\n      <div className='reply-footer'>\n        <div className='reply-votes'>\n          <i className='fas fa-arrow-alt-circle-up'></i>\n          <span className=\"reply-like-count\">1</span>\n          <i className='fas fa-arrow-alt-circle-down'></i>\n          {user && user.username === reply.username && (\n            <span className='reply-delete'>\n              <Delete\n                postId={postId}\n                commentId={commentId}\n                replyId={reply.id}\n              />\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Reply;\n","import { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport '../../styles/Comment.css';\n\nimport CommentBox from './CommentBox';\nimport Reply from './Reply';\nimport Delete from '../Delete';\nimport { AuthContext } from '../../context/auth';\n\nfunction Comment({ comment, postId }) {\n  const { user } = useContext(AuthContext);\n  const [com, setCom] = useState(false);\n\n  const { replys } = comment;\n\n  console.log(comment)\n\n  return (\n    <div className='comment'>\n      <div className='comment-box'>\n        <div className='comment-head'>\n          <Link to={`/${comment.username}`} style={{ color: 'inherit', textDecoration: 'inherit' }}>\n            {comment.username} <span>|</span>\n          </Link>\n          <span className='comment-createdAt'>{moment(comment.createdAt).fromNow()}</span>\n        </div>\n        <div className='comment-content'>{comment.body}</div>\n        <div className='comment-footer'>\n          <div className='votes'>\n            <i className='fas fa-arrow-alt-circle-up'></i>\n            <span className=\"comment-like-count\">1</span>\n            <i className='fas fa-arrow-alt-circle-down'></i>\n            <i\n              className='fas fa-comment-alt reply-icon'\n              onClick={() => setCom(!com)}\n            ></i>\n            {user && user.username === comment.username && (\n              <span className='comment-delete'>\n                <Delete postId={postId} commentId={comment.id} />\n              </span>\n            )}\n          </div>\n        </div>\n        {com && (\n          <div className='reply-comment'>\n            <CommentBox\n              reply={true}\n              setCom={setCom}\n              commentId={comment.id}\n              postId={postId}\n            />\n          </div>\n        )}\n      </div>\n      {replys &&\n        replys.map((reply) => (\n          <div key={reply.id}>\n            <Reply reply={reply} postId={postId} commentId={comment.id} />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Comment;\n","import '../../styles/Comments.css';\n\nimport Comment from './Comment';\n\nfunction Comments({ comments, postId }) {\n  return (\n    <>\n      {comments.map((comment) => (\n        <div key={comment.id}>\n          <Comment comment={comment} postId={postId} />\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default Comments;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const useForm = (callback, initailState = {}) => {\n  const [values, setValues] = useState(initailState);\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // Send to server for validation\n    callback();\n  };\n\n  return { values, onChange, onSubmit };\n};\n\nexport const stripes = (\n  <div>\n    <div className='striped'>\n      <span className='striped-line'></span>\n      <span className='striped-text'>Or</span>\n      <span className='striped-line'></span>\n    </div>\n  </div>\n);\n\nexport const AuthHeading = ({ title, question, link, account }) => {\n  return (\n    <div className='heading'>\n      <h1 className='text text-large'>{title}</h1>\n      <p className='text text-normal'>\n        {question}\n        <span>\n          <Link to={link} className='text text-links'>\n            {account}\n          </Link>\n        </span>\n      </p>\n    </div>\n  );\n};\n","import { useMutation } from '@apollo/client';\n\nimport { EDIT_POST_MUTATION } from '../../util/graphql';\nimport { useForm } from '../../util/hooks';\n\nfunction EditPost({ setEdit, getPost }) {\n  const { id, body } = getPost;\n\n  const { onChange, onSubmit, values } = useForm(editPostCallback, {\n    body,\n  });\n\n  const [editPost] = useMutation(EDIT_POST_MUTATION, {\n    onError(err) {\n      console.log(JSON.stringify(err, null, 2));\n    },\n    variables: {\n      postId: id,\n      body: values.body,\n    },\n  });\n\n  function editPostCallback() {\n    editPost();\n    setEdit(false);\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className='comment-box'>\n        <textarea\n          name='body'\n          value={values.body}\n          className='input-field'\n          onChange={onChange}\n        />\n      </div>\n      <button>Submit New Post</button>\n      <p onClick={() => setEdit(false)}>Cancel</p>\n    </form>\n  );\n}\n\nexport default EditPost;\n","import { useState, useContext, useEffect } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport moment from 'moment';\nimport '../styles/SinglePost.css';\n\nimport CommentBox from '../components/SinglePage/CommentBox';\nimport Comments from '../components/SinglePage/Comments';\nimport Delete from '../components/Delete';\nimport EditPost from '../components/EditUser/EditPost';\nimport SideBar from '../components/SideBar/SideBar';\nimport { AuthContext } from '../context/auth';\nimport { FETCH_POST_QUERY } from '../util/graphql';\n\nfunction SinglePost(props) {\n  const { user } = useContext(AuthContext);\n  const [edit, setEdit] = useState(false);\n  const postId = props.match.params.postId;\n  const history = useHistory();\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const { data: { getPost } = {} } = useQuery(FETCH_POST_QUERY, {\n    variables: {\n      postId,\n    },\n  });\n\n  // Width for browser\n  function useWindowSize() {\n    useEffect(() => {\n      // Handler to call on window resize\n      function handleResize() {\n        // Set window width/height to state\n        setWidth(window.innerWidth);\n      }\n      // Add event listener\n      window.addEventListener('resize', handleResize);\n      // Call handler right away so state gets updated with initial window size\n      handleResize();\n      // Remove event listener on cleanup\n      return () => window.removeEventListener('resize', handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n    return width;\n  }\n\n  useWindowSize();\n\n  return (\n    <div className='single-post container'>\n      <button className='go-back' onClick={() => history.goBack()}>\n        Go Back\n      </button>\n      <div className='board container'>\n        <div className='board-masonry-post'>\n          {getPost ? (\n            <>\n              <div className='single-page-post-card'>\n                <div className='post-votes'></div>\n                <div className='post-section'>\n                  <div className='post-inline'>\n                    <Link\n                      to={`/${getPost.username}`}\n                      style={{ color: 'inherit', textDecoration: 'inherit' }}>\n                      {getPost.username} <span>|</span>\n                    </Link>\n                    <p className='post-date'>\n                      {moment(getPost.createdAt).fromNow()}\n                    </p>\n                  </div>\n                  <h1 className='post-title'>{getPost.title}</h1>\n                  {edit ? (\n                    <span>\n                      <EditPost setEdit={setEdit} getPost={getPost} />\n                    </span>\n                  ) : (\n                    <p className='single-page-post-body'>{getPost.body}</p>\n                  )}\n                  <div className='post-inline post-icons'>\n                    <i className='fas fa-comment-alt' />\n                    <p>\n                      {getPost.commentCount}\n                      {getPost.commentCount === 1 ? '  Comment' : '  Comments'}\n                    </p>\n                    <p className='post-likes'>\n                      {getPost.likeCount}\n                      {getPost.likeCount === 1 ? '  Like' : '  Likes'}\n                    </p>\n                    {user && (\n                      <>\n                        <span className='single-page-post-delete'>\n                          {user.username === getPost.username && (\n                            <Delete postId={getPost.id} />\n                          )}\n                        </span>\n                        <span className='single-page-post-edit'>\n                          {!edit && user.username === getPost.username && (\n                            <p onClick={() => setEdit(true)}>Edit Post</p>\n                          )}\n                        </span>\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className='post-comment-box'>\n                  <CommentBox reply={false} postId={getPost.id} />\n                </div>\n                {!user && (\n                  <p>Cannot comment on the post unless you are logged in</p>\n                )}\n              </div>\n              {getPost.comments.length > 0 && (\n                <div className='comment-card'>\n                  <Comments comments={getPost.comments} postId={getPost.id} />\n                </div>\n              )}\n            </>\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n        {width > 960 && (\n          <div className='board-masonry-sidebar'>\n            <SideBar />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default SinglePost;\n","function PostInput({ className, type, name, onChange, placeholder }) {\n  return (\n    <>\n      {type === 'text' ? (\n        <div className={className}>\n          <textarea\n            type='text'\n            name={name}\n            onChange={onChange}\n            placeholder={placeholder}\n          />\n        </div>\n      ) : (\n        <div className={className}>\n          <input type='file' />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default PostInput;\n","import '../styles/Select.css';\nimport { groups } from '../util/groupList';\n\nfunction Select() {\n  return (\n    <div>\n      <label htmlFor='tags' className='select-label'>\n        Group\n      </label>\n      <select name='tags' id='tags' className='select-options'>\n        {groups.map((group) => (\n          <option key={group.name} value='ACL'>{group.name}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default Select;\n","import { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/CreatePost.css';\n\nimport PostInput from '../components/Posts/PostInput';\nimport SideBar from '../components/SideBar/SideBar';\nimport Select from '../components/Select';\nimport { useForm } from '../util/hooks';\nimport { CREATE_POST_MUTATION, FETCH_POSTS_QUERY } from '../util/graphql';\n\nfunction CreatePost() {\n  const history = useHistory();\n  const [activeTab, setActiveTab] = useState('Post');\n\n  // Get onChange, submit and values from useForm\n  const { values, onChange, onSubmit } = useForm(createPostCallback, {\n    title: '',\n    body: '',\n  });\n\n  // Handled errors differently than other pages b/c there is only 1\n  const [createPost] = useMutation(CREATE_POST_MUTATION, {\n    update(cache, { data: createPost }) {\n      const { getPosts } = cache.readQuery({ query: FETCH_POSTS_QUERY });\n      const newPost = createPost.createPost;\n      const newPostData = [...getPosts, newPost];\n      cache.writeQuery({\n        query: FETCH_POSTS_QUERY,\n        data: { getPosts: newPostData },\n      });\n      history.push('/board');\n    },\n    onError(err) {\n      console.log(JSON.stringify(err, null, 2));\n    },\n    variables: {\n      title: values.title,\n      body: values.body,\n    },\n  });\n\n  function createPostCallback() {\n    createPost();\n  }\n\n  const tabClick = (e) => {\n    e.preventDefault();\n    setActiveTab(e.target.getAttribute('name'));\n  };\n\n  return (\n    <div className='full-create-post container'>\n      <button className='go-back container' onClick={() => history.goBack()}>\n        Go Back\n      </button>\n      <div style={{ display: 'flex', flexWrap: 'wrap' }} className='container'>\n        <form onSubmit={onSubmit} className='create-post-input'>\n          <h1>Create a Post</h1>\n          <Select />\n          {/* <label htmlFor='tags' className='create-post-tag-label'>\n            Group\n          </label>\n          <select name='tags' id='tags' className='create-post-tags'>\n            <option value='ACL'>ACL</option>\n            <option value='ACL'>Meniscus</option>\n            <option value='ACL'>PCL</option>\n            <option value='ACL'>Arthitis</option>\n            <option value='ACL'>Research Papers</option>\n          </select> */}\n          <div className='create-post-box'>\n            <input\n              className='create-post-title'\n              type='text'\n              name='title'\n              onChange={onChange}\n              placeholder='Title'\n            />\n            <div className='create-post-tabs'>\n              <div\n                className={activeTab === 'Post' ? 'active' : ''}\n                name='Post'\n                onClick={tabClick}>\n                Post\n              </div>\n              <div\n                className={activeTab === 'Image' ? 'active' : ''}\n                name='Image'\n                onClick={tabClick}>\n                Images\n              </div>\n            </div>\n            {activeTab === 'Image' ? (\n              <PostInput\n                className='create-post-upload'\n                type='file'\n                name='profile-pic'\n              />\n            ) : (\n              <PostInput\n                className='create-post-text'\n                type='text'\n                name='body'\n                onChange={onChange}\n                placeholder='Whats up?'\n              />\n            )}\n            <div className='create-post-footer'>\n              <span className='create-post-tags-button'>Tags</span>\n              <button\n                className='create-post-submit-button'\n                type='submit'\n                disabled={!values.title || !values.body}>\n                Submit\n              </button>\n            </div>\n          </div>\n        </form>\n        <div className='create-post-sidebar'>\n          <SideBar />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CreatePost;\n","function Input({ type, name, placeholder, onChange, value }) {\n  return (\n    <div className='input-control'>\n      <input\n        type={type}\n        value={value}\n        name={name}\n        className='input-field'\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","import { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport { AuthContext } from '../context/auth';\n\nfunction GoogleLoginHook() {\n  const context = useContext(AuthContext);\n  const history = useHistory();\n\n  // Client Secret dr1vM3zNBfY4cro - mTmebMXx;\n  const googleSuccess = async (res) => {\n    console.log(res);\n\n    try {\n      const googleUser = {\n        id: res.googleId,\n        username: res.name,\n        email: res.profileObj.email,\n        createdAt: new Date().toISOString(),\n        token: res.tokenId,\n      };\n      context.login(googleUser);\n\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const googleFailure = (err) => {\n    console.log(err);\n    console.log('Google login failed bruh');\n  };\n\n  return (\n    <GoogleLogin\n      clientId='699714927059-tkfs9qbbbfgg1qtulua8tmlik2d999fi.apps.googleusercontent.com'\n      buttonText='Sign in with Google'\n      onSuccess={googleSuccess}\n      onFailure={googleFailure}\n      cookiePolicy={'single_host_origin'}\n    />\n  );\n}\n\nexport default GoogleLoginHook;\n","import { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport '../styles/Login.css';\n\nimport Input from '../components/Input';\nimport GoogleLoginHook from '../util/GoogleLogin';\nimport { AuthContext } from '../context/auth';\nimport { LOGIN_USER } from '../util/graphql';\nimport { stripes, AuthHeading, useForm } from '../util/hooks';\n\nfunction Login() {\n  const context = useContext(AuthContext);\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n\n  const { values, onChange, onSubmit } = useForm(loginUserCallback, {\n    username: '',\n    password: '',\n  });\n\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n    update(_, { data: { login: userData } }) {\n      context.login(userData);\n      history.push('/board');\n    },\n    onError(err) {\n      console.log(err);\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: {\n      username: values.username,\n      password: values.password,\n    },\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return (\n    <>\n      <main className='main'>\n        <div className='auth-container'>\n          <section className='wrapper'>\n            <AuthHeading\n              title='Sign In'\n              question='New user? '\n              link='/register'\n              account='Create an account'\n            />\n            <form\n              name='login'\n              className={loading ? 'form loading' : 'form'}\n              onSubmit={onSubmit}>\n              <Input\n                type='username'\n                name='username'\n                placeholder='Username'\n                onChange={onChange}\n              />\n              <Input\n                type='password'\n                name='password'\n                placeholder='Password'\n                onChange={onChange}\n              />\n              <div className='input-control'>\n                <p className='text text-links'>Forgot Password</p>\n                <button\n                  type='submit'\n                  disabled={loading}\n                  className='input-submit'>\n                  Login\n                </button>\n              </div>\n            </form>\n            {Object.keys(errors).length > 0 && (\n              <ul className='list'>\n                {Object.values(errors).map((value) => (\n                  <li key={value}>{value}</li>\n                ))}\n              </ul>\n            )}\n            {stripes}\n            <div className='method'>\n              <div className='method-control'>\n                <p className='method-action'>\n                  <GoogleLoginHook />\n                </p>\n              </div>\n            </div>\n          </section>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default Login;\n","import { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport '../../styles/UserInfo.css';\n\nimport Input from '../Input';\nimport { EDIT_PROFILE_MUTATION } from '../../util/graphql';\nimport { AuthContext } from '../../context/auth';\nimport { useForm } from '../../util/hooks';\n\nfunction UserInfo({ getUser, label, inputName, type, value, userId }) {\n  const { user } = useContext(AuthContext);\n  const [edit, setEdit] = useState(false);\n\n  const { onChange, onSubmit, values } = useForm(editUserCallback, {\n    username: getUser.username,\n    email: getUser.email,\n    bio: getUser.bio,\n  });\n\n  const [editUser] = useMutation(EDIT_PROFILE_MUTATION, {\n    // update: (cache, { data: { editUser } } ) => {\n    //   const user = cache.readQuery({\n    //     query: FETCH_PROFILE_QUERY,\n    //     variables: { username: getUser.username },\n    //   });\n    //   console.log(user);\n    //   const updatedUser = editUser;\n\n    // },\n    onError(err) {\n      console.log(JSON.stringify(err, null, 2));\n    },\n    variables: {\n      userId: userId,\n      email: values.email,\n      bio: values.bio,\n    },\n  });\n\n  function editUserCallback() {\n    editUser();\n    setEdit(false);\n  }\n\n  let inputValue;\n\n  if (inputName === 'email') {\n    inputValue = values.email;\n  } else if (inputName === 'bio') {\n    inputValue = values.bio;\n  } else if (inputName === 'username') {\n    inputValue = values.username;\n  }\n\n  return (\n    <>\n      {edit && userId === user.id ? (\n        <form onSubmit={onSubmit} className='edit-user-submit'>\n          <div className='edit-profile-input'>\n            <p>{label}:</p>\n            <Input\n              type={type}\n              name={inputName}\n              placeholder={label}\n              onChange={onChange}\n              value={inputValue}\n              className='edit-profile-input-field'\n            />\n          </div>\n          <div className='edit-profile-submit'>\n            <i\n              className='far fa-window-close edit-profile-cancel'\n              onClick={() => setEdit(false)}\n            />\n            <button>Submit</button>\n          </div>\n        </form>\n      ) : (\n        // </div>\n        <div className='edit-user'>\n          <p>\n            {label}: {value}\n          </p>\n\n          {user && user.username === getUser.username && (\n            <div className='edit-profile-button'>\n              <i className='fas fa-edit' onClick={() => setEdit(true)} />\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default UserInfo;\n","export default __webpack_public_path__ + \"static/media/blank-avatar.f4eb2a3e.jpg\";","import { useContext } from 'react';\nimport { useQuery } from '@apollo/client';\nimport '../styles/UserProfile.css';\n\nimport Delete from '../components/Delete';\nimport UserInfo from '../components/EditUser/UserInfo';\nimport stockAvatar from '../images/blank-avatar.jpg';\nimport { FETCH_PROFILE_QUERY } from '../util/graphql';\nimport { AuthContext } from '../context/auth';\n\nfunction UserProfile(props) {\n  const { user } = useContext(AuthContext);\n  const username = props.match.params.username;\n\n  const { loading, data: { getUser } = {} } = useQuery(FETCH_PROFILE_QUERY, {\n    variables: {\n      username,\n    },\n  });\n\n  return (\n    <>\n      {loading ? (\n        <p>Loading peopleeee</p>\n      ) : (\n        <div className='profile container'>\n          <div className='profile-pic'>\n            <img src={stockAvatar} alt='profile-pic' />\n          </div>\n          <div className='profile-username'>\n            <UserInfo\n              label='Username'\n              value={getUser.username}\n              getUser={getUser}\n              type='text'\n              inputName='username'\n              userId={getUser.id}\n            />\n          </div>\n          <div className='profile-email'>\n            <UserInfo\n              label='Email'\n              value={getUser.email}\n              getUser={getUser}\n              type='email'\n              inputName='email'\n              userId={getUser.id}\n            />\n          </div>\n          <div className='profile-bio'>\n            <UserInfo\n              label='Bio'\n              value={getUser.bio}\n              getUser={getUser}\n              type='text'\n              inputName='bio'\n              userId={getUser.id}\n            />\n          </div>\n          <div className='profile-stats'>\n            <p>Posts:</p>\n            <p>Comments:</p>\n          </div>\n          <div className='delete-user'>\n            {user && user.id === getUser.id && (\n              <Delete userId={getUser.id} username={getUser.username} />\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default UserProfile;\n","import { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useHistory } from 'react-router-dom';\nimport '../styles/Login.css';\n\nimport Input from '../components/Input';\nimport GoogleLoginHook from '../util/GoogleLogin';\nimport { AuthContext } from '../context/auth';\nimport { REGISTER_USER } from '../util/graphql';\nimport { stripes, AuthHeading, useForm } from '../util/hooks';\n\nfunction Register() {\n  const context = useContext(AuthContext);\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n\n  const { values, onChange, onSubmit } = useForm(registerUserCallback, {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\n    update(_, result) {\n      let userData = result.data.register;\n      context.login(userData);\n\n      history.push('/board');\n    },\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n    variables: {\n      username: values.username,\n      email: values.email,\n      password: values.password,\n      confirmPassword: values.confirmPassword,\n    },\n  });\n\n  // Workaround to make sure addUser is recognized above, keyword \"function\" is read first\n  function registerUserCallback() {\n    addUser();\n  }\n\n  return (\n    <>\n      <main className='main'>\n        <div className='auth-container'>\n          <section className='wrapper'>\n            <AuthHeading\n              title='Register'\n              question='Already have an account? '\n              link='/login'\n              account='Login'\n            />\n            <form\n              name='register'\n              onSubmit={onSubmit}\n              className={loading ? 'form loading' : 'form'}>\n              <Input\n                type='text'\n                name='username'\n                placeholder='Username'\n                onChange={onChange}\n              />\n              <Input\n                type='email'\n                name='email'\n                placeholder='Email Address'\n                onChange={onChange}\n              />\n              <Input\n                type='password'\n                name='password'\n                placeholder='Password'\n                onChange={onChange}\n              />\n              <Input\n                type='password'\n                name='confirmPassword'\n                placeholder='Confirm Password'\n                onChange={onChange}\n              />\n              <div className='input-control'>\n                <button\n                  type='submit'\n                  disabled={loading}\n                  className='input-submit'>\n                  Register\n                </button>\n              </div>\n            </form>\n            {Object.keys(errors).length > 0 && (\n              <ul className='list'>\n                {Object.values(errors).map((value) => (\n                  <li key={value}>{value}</li>\n                ))}\n              </ul>\n            )}\n            {stripes}\n            <div className='method'>\n              <div className='method-control'>\n                <p className='method-action'>\n                  <GoogleLoginHook />\n                </p>\n              </div>\n            </div>\n          </section>\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default Register;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache,\n  ApolloProvider,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport './App.css';\n\nimport { AuthProvider } from './context/auth';\nimport { AuthRoute } from './util/AuthRoute';\n\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Board from './pages/Board';\nimport SinglePost from './pages/SinglePost';\nimport CreatePost from './pages/CreatePost';\nimport Login from './pages/Login';\nimport UserProfile from './pages/UserProfile';\nimport Register from './pages/Register';\n\n// Connect to graphql\nconst httpLink = createHttpLink({\n  uri: '/',\n});\n\n// Set authorization header in the backend\nconst authLink = setContext(() => {\n  // get token from the local storage\n  const token = localStorage.getItem('jwtToken');\n  // set auth header\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n  connectToDevTools: true,\n});\n\nfunction App() {\n  return (\n    <>\n      <AuthProvider>\n        <ApolloProvider client={client}>\n          <Router>\n            <Navbar />\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route exact path='/board' component={Board} />\n              <Route exact path='/board/:postId' component={SinglePost} />\n              <Route exact path='/whatsup' component={CreatePost} />\n              <AuthRoute Route exact path='/login' component={Login} />\n              <AuthRoute Route exact path='/register' component={Register} />\n              <Route exact path='/:username' component={UserProfile} />\n            </Switch>\n          </Router>\n        </ApolloProvider>\n      </AuthProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}